spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.jpa.defer-datasource-initialization: true 
server.port=8080

spring.application.name=bankaccount
spring.profiles.active=prod
spring.config.import=optional:configserver:http://localhost:8070/

management.endpoints.web.exposure.include=*

eureka.instance.preferIpAddress=true
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.client.serviceUrl.defaultZone=http://localhost:8071/eureka/

management.info.env.enabled=true
info.app.name=BankAccount Microservice
info.app.description=My Bank Account Application
info.app.version=1.0.0

endpoints.shutdown.enabled=true
management.endpoint.shutdown.enabled=true

resilience4j.circuitbreaker.configs.defaultZone.register-health-indicator=true
resilience4j.circuitbreaker.instances.detailsForCustomerSupportApp.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.detailsForCustomerSupportApp.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.detailsForCustomerSupportApp.wait-duration-in-open-state=30000
resilience4j.circuitbreaker.instances.detailsForCustomerSupportApp.permitted-number-of-calls-in-half-open-state=2

resilience4j.retry.configs.default.register-health-indicator=true
resilience4j.retry.instances.retryForCustomerDetails.max-retry-attempts=3
resilience4j.retry.instances.retryForCustomerDetails.wait-duration=2000

resilience4j.ratelimiter.configs.default.register-health-indicator=true
resilience4j.ratelimiter.instances.sayHello.timeout-duration=5000
resilience4j.ratelimiter.instances.sayHello.limit-refresh-period=5000
resilience4j.ratelimiter.instances.sayHello.limit-for-period=1

# Micrometer related properties
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.metrics.distribution.percentiles-histogram.http.server.requests=true
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

